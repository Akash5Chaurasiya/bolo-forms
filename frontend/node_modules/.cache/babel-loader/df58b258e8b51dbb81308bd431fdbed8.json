{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\bolo\\\\react-form-builder\\\\frontend\\\\src\\\\pages\\\\QuestionTypes\\\\CategorizeQuestion.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDrop, useDrag } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Answer = _ref => {\n  _s();\n\n  let {\n    answer,\n    index,\n    moveAnswer\n  } = _ref;\n  const [, ref] = useDrag({\n    type: 'ANSWER',\n    item: {\n      index\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: {\n      padding: '8px',\n      border: '1px solid #ccc',\n      margin: '4px',\n      cursor: 'move'\n    },\n    children: answer.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Answer, \"l83xjKI78HD1qqWPe6e86n/t6qI=\", false, function () {\n  return [useDrag];\n});\n\n_c = Answer;\n\nconst Category = _ref2 => {\n  _s2();\n\n  let {\n    category,\n    answers,\n    setAnswers\n  } = _ref2;\n  const [, drop] = useDrop({\n    accept: 'ANSWER',\n    drop: item => {\n      const updatedAnswers = [...answers];\n      updatedAnswers[item.index].category = category;\n      setAnswers(updatedAnswers);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: {\n      padding: '8px',\n      border: '2px solid #000',\n      margin: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), answers.filter(answer => answer.category === category).map((answer, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: answer.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Category, \"hdmCamxlwL9WeSdzgzIVyaE48AI=\", false, function () {\n  return [useDrop];\n});\n\n_c2 = Category;\n\nconst CategorizeQuestion = _ref3 => {\n  _s3();\n\n  let {\n    question,\n    onChange\n  } = _ref3;\n  const [answers, setAnswers] = useState([]);\n\n  const handleAnswerChange = (index, text) => {\n    const updatedAnswers = [...answers];\n    updatedAnswers[index] = {\n      text,\n      category: ''\n    };\n    setAnswers(updatedAnswers);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Categorize:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter the categorization question\",\n      value: question.content,\n      onChange: e => onChange({ ...question,\n        content: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), answers.map((answer, index) => /*#__PURE__*/_jsxDEV(Answer, {\n          answer: answer,\n          index: index,\n          moveAnswer: handleAnswerChange\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), ['Category 1', 'Category 2', 'Category 3'].map((category, index) => /*#__PURE__*/_jsxDEV(Category, {\n          category: category,\n          answers: answers,\n          setAnswers: setAnswers\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(CategorizeQuestion, \"KPN3AqcgP4AdsR7kxBPisa81x6M=\");\n\n_c3 = CategorizeQuestion;\nexport default CategorizeQuestion;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Answer\");\n$RefreshReg$(_c2, \"Category\");\n$RefreshReg$(_c3, \"CategorizeQuestion\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/bolo/react-form-builder/frontend/src/pages/QuestionTypes/CategorizeQuestion.jsx"],"names":["React","useState","useDrop","useDrag","Answer","answer","index","moveAnswer","ref","type","item","padding","border","margin","cursor","text","Category","category","answers","setAnswers","drop","accept","updatedAnswers","filter","map","CategorizeQuestion","question","onChange","handleAnswerChange","content","e","target","value","display","marginTop","flex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDrop, useDrag } from 'react-dnd';\r\n\r\nconst Answer = ({ answer, index, moveAnswer }) => {\r\n  const [, ref] = useDrag({\r\n    type: 'ANSWER',\r\n    item: { index },\r\n  });\r\n\r\n  return (\r\n    <div ref={ref} style={{ padding: '8px', border: '1px solid #ccc', margin: '4px', cursor: 'move' }}>\r\n      {answer.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Category = ({ category, answers, setAnswers }) => {\r\n  const [, drop] = useDrop({\r\n    accept: 'ANSWER',\r\n    drop: (item) => {\r\n      const updatedAnswers = [...answers];\r\n      updatedAnswers[item.index].category = category;\r\n      setAnswers(updatedAnswers);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div ref={drop} style={{ padding: '8px', border: '2px solid #000', margin: '8px' }}>\r\n      <strong>{category}</strong>\r\n      {answers\r\n        .filter((answer) => answer.category === category)\r\n        .map((answer, index) => (\r\n          <p key={index}>{answer.text}</p>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CategorizeQuestion = ({ question, onChange }) => {\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  const handleAnswerChange = (index, text) => {\r\n    const updatedAnswers = [...answers];\r\n    updatedAnswers[index] = { text, category: '' };\r\n    setAnswers(updatedAnswers);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>Categorize:</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter the categorization question\"\r\n        value={question.content}\r\n        onChange={(e) => onChange({ ...question, content: e.target.value })}\r\n      />\r\n      <div style={{ display: 'flex', marginTop: '10px' }}>\r\n        <div style={{ flex: 1 }}>\r\n          <h4>Answers</h4>\r\n          {answers.map((answer, index) => (\r\n            <Answer key={index} answer={answer} index={index} moveAnswer={handleAnswerChange} />\r\n          ))}\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <h4>Categories</h4>\r\n          {['Category 1', 'Category 2', 'Category 3'].map((category, index) => (\r\n            <Category key={index} category={category} answers={answers} setAnswers={setAnswers} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategorizeQuestion;\r\n"]},"metadata":{},"sourceType":"module"}