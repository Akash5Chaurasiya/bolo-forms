{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\bolo\\\\react-form-builder\\\\frontend\\\\src\\\\pages\\\\QuestionTypes\\\\ClozeQuestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClozeQuestion = ({\n  question,\n  onChange\n}) => {\n  _s();\n  const [selectedText, setSelectedText] = useState('');\n  const contentEditableRef = useRef(null);\n  const [answer, setAnswer] = useState('');\n  const handleContentChange = () => {\n    onChange({\n      ...question,\n      content: contentEditableRef.current.innerText\n    });\n  };\n  console.log(answer);\n  const handleInsertBlank = () => {\n    const contentEditable = contentEditableRef.current;\n    // Replace the selected text with a blank\n    const modifiedContent = contentEditable.innerText.replace(selectedText, '_____');\n    // Set the modified content and update state\n    contentEditable.innerText = modifiedContent;\n    setAnswer(selectedText);\n    handleContentChange();\n  };\n  const handleSelect = () => {\n    const selection = window.getSelection();\n    setSelectedText(selection.toString());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Cloze (Fill in the Blank):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: contentEditableRef,\n      contentEditable: true,\n      placeholder: \"Enter the fill-in-the-blank question\",\n      onBlur: handleContentChange,\n      onSelect: handleSelect,\n      children: question.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInsertBlank,\n      children: \"Insert Blank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ClozeQuestion, \"sMxiuoWjlxJdydV8mz0IFwNwBt8=\");\n_c = ClozeQuestion;\nexport default ClozeQuestion;\nvar _c;\n$RefreshReg$(_c, \"ClozeQuestion\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","ClozeQuestion","question","onChange","_s","selectedText","setSelectedText","contentEditableRef","answer","setAnswer","handleContentChange","content","current","innerText","console","log","handleInsertBlank","contentEditable","modifiedContent","replace","handleSelect","selection","window","getSelection","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","placeholder","onBlur","onSelect","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/bolo/react-form-builder/frontend/src/pages/QuestionTypes/ClozeQuestion.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\nconst ClozeQuestion = ({ question, onChange }) => {\r\n    const [selectedText, setSelectedText] = useState('');\r\n    const contentEditableRef = useRef(null);\r\n    const [answer, setAnswer] = useState('');\r\n    const handleContentChange = () => {\r\n        onChange({\r\n            ...question,\r\n            content: contentEditableRef.current.innerText,\r\n        });\r\n    };\r\n    console.log(answer);\r\n    const handleInsertBlank = () => {\r\n        const contentEditable = contentEditableRef.current;\r\n        // Replace the selected text with a blank\r\n        const modifiedContent = contentEditable.innerText.replace(selectedText, '_____');\r\n        // Set the modified content and update state\r\n        contentEditable.innerText = modifiedContent;\r\n        setAnswer(selectedText);\r\n        handleContentChange();\r\n    };\r\n\r\n    const handleSelect = () => {\r\n        const selection = window.getSelection();\r\n        setSelectedText(selection.toString());\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>Cloze (Fill in the Blank):</label>\r\n            <div\r\n                ref={contentEditableRef}\r\n                contentEditable\r\n                placeholder=\"Enter the fill-in-the-blank question\"\r\n                onBlur={handleContentChange}\r\n                onSelect={handleSelect}\r\n            >\r\n                {question.content}\r\n            </div>\r\n            <button onClick={handleInsertBlank}>Insert Blank</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClozeQuestion;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMU,kBAAkB,GAAGT,MAAM,CAAC,IAAI,CAAC;EACvC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMa,mBAAmB,GAAGA,CAAA,KAAM;IAC9BP,QAAQ,CAAC;MACL,GAAGD,QAAQ;MACXS,OAAO,EAAEJ,kBAAkB,CAACK,OAAO,CAACC;IACxC,CAAC,CAAC;EACN,CAAC;EACDC,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;EACnB,MAAMQ,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,eAAe,GAAGV,kBAAkB,CAACK,OAAO;IAClD;IACA,MAAMM,eAAe,GAAGD,eAAe,CAACJ,SAAS,CAACM,OAAO,CAACd,YAAY,EAAE,OAAO,CAAC;IAChF;IACAY,eAAe,CAACJ,SAAS,GAAGK,eAAe;IAC3CT,SAAS,CAACJ,YAAY,CAAC;IACvBK,mBAAmB,CAAC,CAAC;EACzB,CAAC;EAED,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC;IACvCjB,eAAe,CAACe,SAAS,CAACG,QAAQ,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,oBACIxB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAO;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzC7B,OAAA;MACI8B,GAAG,EAAEvB,kBAAmB;MACxBU,eAAe;MACfc,WAAW,EAAC,sCAAsC;MAClDC,MAAM,EAAEtB,mBAAoB;MAC5BuB,QAAQ,EAAEb,YAAa;MAAAK,QAAA,EAEtBvB,QAAQ,CAACS;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACN7B,OAAA;MAAQkC,OAAO,EAAElB,iBAAkB;MAAAS,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAACzB,EAAA,CAzCIH,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}