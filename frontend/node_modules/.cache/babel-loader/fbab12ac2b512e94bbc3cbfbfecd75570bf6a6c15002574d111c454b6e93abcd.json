{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\bolo\\\\react-form-builder\\\\frontend\\\\src\\\\pages\\\\QuestionTypes\\\\ClozeQuestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport formActions from \"./../../store/actions/formActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClozeQuestion = ({\n  question,\n  onChange\n}) => {\n  _s();\n  const [selectedText, setSelectedText] = useState('');\n  const contentEditableRef = useRef(null);\n  const [answer, setAnswer] = useState('');\n  const dispatch = useDispatch();\n  const {\n    action\n  } = useSelector(state => state.form);\n  const handleContentChange = () => {\n    onChange({\n      ...question,\n      content: contentEditableRef.current.innerText\n    });\n  };\n  console.log(answer);\n  const handleInsertBlank = () => {\n    const contentEditable = contentEditableRef.current;\n    // Replace the selected text with a blank\n    const modifiedContent = contentEditable.innerText.replace(selectedText, '_____');\n    // Set the modified content and update state\n    contentEditable.innerText = modifiedContent;\n    setAnswer(selectedText);\n    handleContentChange();\n  };\n  const handleSelect = () => {\n    const selection = window.getSelection();\n    setSelectedText(selection.toString());\n  };\n  const saveForm = () => {\n    const formJson = {\n      title: \"Cloze\",\n      body: [setAnswer]\n    };\n    dispatch(formActions.saveForm(formJson));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginBottom: '8px',\n          display: 'block'\n        },\n        children: \"Cloze (Fill in the Blank):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: contentEditableRef,\n        contentEditable: true,\n        placeholder: \"Enter the fill-in-the-blank question\",\n        onBlur: handleContentChange,\n        onSelect: handleSelect,\n        style: {\n          border: '1px solid #ccc',\n          padding: '8px',\n          borderRadius: '4px',\n          marginBottom: '10px',\n          minHeight: '50px',\n          // Adjust height as needed\n          overflowY: 'auto'\n        },\n        children: question.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInsertBlank,\n        style: {\n          backgroundColor: '#4caf50',\n          color: 'white',\n          padding: '10px',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Insert Blank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-form-btn btn\",\n      onClick: () => saveForm(),\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ClozeQuestion, \"mqCp0DbVBhV8jb53pwHdwFiw1Us=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ClozeQuestion;\nexport default ClozeQuestion;\nvar _c;\n$RefreshReg$(_c, \"ClozeQuestion\");","map":{"version":3,"names":["React","useState","useRef","useDispatch","useSelector","formActions","jsxDEV","_jsxDEV","ClozeQuestion","question","onChange","_s","selectedText","setSelectedText","contentEditableRef","answer","setAnswer","dispatch","action","state","form","handleContentChange","content","current","innerText","console","log","handleInsertBlank","contentEditable","modifiedContent","replace","handleSelect","selection","window","getSelection","toString","saveForm","formJson","title","body","children","style","marginBottom","display","fileName","_jsxFileName","lineNumber","columnNumber","ref","placeholder","onBlur","onSelect","border","padding","borderRadius","minHeight","overflowY","onClick","backgroundColor","color","cursor","className","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/bolo/react-form-builder/frontend/src/pages/QuestionTypes/ClozeQuestion.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport formActions from \"./../../store/actions/formActions\";\r\n\r\nconst ClozeQuestion = ({ question, onChange }) => {\r\n    const [selectedText, setSelectedText] = useState('');\r\n    const contentEditableRef = useRef(null);\r\n    const [answer, setAnswer] = useState('');\r\n    const dispatch = useDispatch();\r\n\tconst { action } = useSelector((state) => state.form);\r\n    const handleContentChange = () => {\r\n        onChange({\r\n            ...question,\r\n            content: contentEditableRef.current.innerText,\r\n        });\r\n    };\r\n    console.log(answer);\r\n    const handleInsertBlank = () => {\r\n        const contentEditable = contentEditableRef.current;\r\n        // Replace the selected text with a blank\r\n        const modifiedContent = contentEditable.innerText.replace(selectedText, '_____');\r\n        // Set the modified content and update state\r\n        contentEditable.innerText = modifiedContent;\r\n        setAnswer(selectedText);\r\n        handleContentChange();\r\n    };\r\n\r\n    const handleSelect = () => {\r\n        const selection = window.getSelection();\r\n        setSelectedText(selection.toString());\r\n    };\r\n    const saveForm = () => {\r\n\t\tconst formJson = {\r\n\t\t\ttitle: \"Cloze\",\r\n\t\t\tbody: [setAnswer],\r\n\t\t};\r\n\t\tdispatch(formActions.saveForm(formJson));\r\n\t};\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label style={{ marginBottom: '8px', display: 'block' }}>Cloze (Fill in the Blank):</label>\r\n                <div\r\n                    ref={contentEditableRef}\r\n                    contentEditable\r\n                    placeholder=\"Enter the fill-in-the-blank question\"\r\n                    onBlur={handleContentChange}\r\n                    onSelect={handleSelect}\r\n                    style={{\r\n                        border: '1px solid #ccc',\r\n                        padding: '8px',\r\n                        borderRadius: '4px',\r\n                        marginBottom: '10px',\r\n                        minHeight: '50px', // Adjust height as needed\r\n                        overflowY: 'auto',\r\n                    }}\r\n                >\r\n                    {question.content}\r\n                </div>\r\n                <button\r\n                    onClick={handleInsertBlank}\r\n                    style={{\r\n                        backgroundColor: '#4caf50',\r\n                        color: 'white',\r\n                        padding: '10px',\r\n                        border: 'none',\r\n                        borderRadius: '4px',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    Insert Blank\r\n                </button>\r\n            </div>\r\n            <button className=\"save-form-btn btn\" onClick={() => saveForm()}>\r\n                Save\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClozeQuestion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}