{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\bolo\\\\react-form-builder\\\\frontend\\\\src\\\\pages\\\\FormCreationPage\\\\CreateForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/Modal/Modal\";\nimport \"./CreateForm.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport formActions from \"./../../store/actions/formActions\";\nimport { history } from \"./../../store/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateForm = () => {\n  _s();\n\n  const [formBody, setFormBody] = useState([]);\n  const [formTitle, setFormTitle] = useState(\"New Form\");\n  const [question, setQuestion] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [questionType, setQuestionType] = useState(0);\n  const [addQuestionModalVisible, setAddQuestionModalVisible] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    action\n  } = useSelector(state => state.form);\n\n  const addQuestion = () => {\n    setAddQuestionModalVisible(true);\n  };\n\n  const addNewQuestion = () => {\n    setAddQuestionModalVisible(false);\n    let formBodyArr = [...formBody];\n    let questionObj = {\n      id: formBodyArr.length + 1,\n      type: questionType,\n      question: question,\n      options: options\n    };\n    formBodyArr.push(questionObj);\n    setFormBody(formBodyArr);\n    resetQuestionModal();\n  };\n\n  const onQuestionTypeChange = e => {\n    setQuestionType(e.target.value);\n  };\n\n  const questionInputChange = e => {\n    setQuestion(e.target.value);\n  };\n\n  const optionInputChange = e => {\n    let rawOptions = e.target.value;\n    let optionsArr = [...rawOptions.trim().split(\"\\n\")];\n    optionsArr = optionsArr.filter(item => !!item);\n    setOptions(optionsArr);\n  };\n\n  const saveForm = () => {\n    const formJson = {\n      title: formTitle,\n      body: formBody\n    };\n    dispatch(formActions.saveForm(formJson));\n  };\n\n  const resetQuestionModal = () => {\n    setOptions([]);\n    setQuestionType(0);\n    setQuestion(\"\");\n  };\n\n  const cancelNewQuestion = () => {\n    resetQuestionModal();\n    setAddQuestionModalVisible(false);\n  };\n\n  useEffect(() => {\n    if (action === formActions.SAVE_FORM_SUCCESS) {\n      history.back();\n    }\n  }, [action]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Form Title\",\n        className: \"form-title\",\n        value: formTitle,\n        onChange: e => setFormTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-body\",\n      children: formBody.map((que, index) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"question\",\n            children: [\" \", `${que.id}. ${que.question}`, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 8\n          }, this), que.type == \"1\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"question-text-input question-text-input-\" + que.id,\n              cols: \"60\",\n              rows: \"4\",\n              placeholder: \"Enter your answer here\",\n              value: \"\",\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 10\n            }, this)\n          }, que.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this), que.type == \"2\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: que.options.map((opn, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `option checkBox`,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  value: opn,\n                  checked: false,\n                  readOnly: true,\n                  className: `optionInput answer-checkbox-${que.id}-${index}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 13\n                }, this), opn]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 12\n              }, this);\n            })\n          }, que.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this), que.type == \"3\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: que.options.map((opn, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `option radio `,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: opn,\n                  checked: false,\n                  readOnly: true,\n                  name: `answer-radio-${que.id}`,\n                  className: `optionInput answer-radio-${que.id}-${index}`\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 13\n                }, this), opn]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 12\n              }, this);\n            })\n          }, que.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 9\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-question-btn btn\",\n        onClick: () => addQuestion(),\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-form-btn btn\",\n        onClick: () => saveForm(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: addQuestionModalVisible,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-question-header\",\n          children: [\"Enter question:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter your question\",\n            className: \"new-question-input\",\n            value: question,\n            onChange: e => questionInputChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-question-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-question-type-container\",\n            children: [\"Select the answer type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"select-question-type\",\n              onChange: e => onQuestionTypeChange(e),\n              defaultValue: 0,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                hidden: true,\n                children: \"--Select--\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \" Text \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \" Checkbox \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \" Radio \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-container\",\n            children: questionType > 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"Enter Options (line seperated):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"options-input\",\n                cols: \"60\",\n                rows: \"4\",\n                placeholder: \"Enter your options here\",\n                onChange: e => optionInputChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-new-question-btn-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-new-question-btn btn\",\n            onClick: () => addNewQuestion(),\n            disabled: questionType <= 0 || question == \"\" || questionType > 1 && options.length <= 0,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-new-question-btn btn\",\n            onClick: () => cancelNewQuestion(),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CreateForm, \"XxvO5p1dhMIbwNSmkUZTwlzfec0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CreateForm;\nexport default CreateForm;\nconst itemEnum = {\n  1: \"text\",\n  2: \"checkBox\",\n  3: \"radio\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/bolo/react-form-builder/frontend/src/pages/FormCreationPage/CreateForm.jsx"],"names":["React","useEffect","useState","Modal","useDispatch","useSelector","formActions","history","CreateForm","formBody","setFormBody","formTitle","setFormTitle","question","setQuestion","options","setOptions","questionType","setQuestionType","addQuestionModalVisible","setAddQuestionModalVisible","dispatch","action","state","form","addQuestion","addNewQuestion","formBodyArr","questionObj","id","length","type","push","resetQuestionModal","onQuestionTypeChange","e","target","value","questionInputChange","optionInputChange","rawOptions","optionsArr","trim","split","filter","item","saveForm","formJson","title","body","cancelNewQuestion","SAVE_FORM_SUCCESS","back","map","que","index","opn","itemEnum"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport \"./CreateForm.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport formActions from \"./../../store/actions/formActions\";\r\nimport { history } from \"./../../store/config\";\r\n\r\nconst CreateForm = () => {\r\n\tconst [formBody, setFormBody] = useState([]);\r\n\tconst [formTitle, setFormTitle] = useState(\"New Form\");\r\n\tconst [question, setQuestion] = useState(\"\");\r\n\tconst [options, setOptions] = useState([]);\r\n\tconst [questionType, setQuestionType] = useState(0);\r\n\tconst [addQuestionModalVisible, setAddQuestionModalVisible] = useState(false);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst { action } = useSelector((state) => state.form);\r\n\r\n\tconst addQuestion = () => {\r\n\t\tsetAddQuestionModalVisible(true);\r\n\t};\r\n\r\n\tconst addNewQuestion = () => {\r\n\t\tsetAddQuestionModalVisible(false);\r\n\t\tlet formBodyArr = [...formBody];\r\n\t\tlet questionObj = {\r\n\t\t\tid: formBodyArr.length + 1,\r\n\t\t\ttype: questionType,\r\n\t\t\tquestion: question,\r\n\t\t\toptions: options,\r\n\t\t};\r\n\t\tformBodyArr.push(questionObj);\r\n\t\tsetFormBody(formBodyArr);\r\n\t\tresetQuestionModal();\r\n\t};\r\n\r\n\tconst onQuestionTypeChange = (e) => {\r\n\t\tsetQuestionType(e.target.value);\r\n\t};\r\n\r\n\tconst questionInputChange = (e) => {\r\n\t\tsetQuestion(e.target.value);\r\n\t};\r\n\r\n\tconst optionInputChange = (e) => {\r\n\t\tlet rawOptions = e.target.value;\r\n\t\tlet optionsArr = [...rawOptions.trim().split(\"\\n\")];\r\n\t\toptionsArr = optionsArr.filter((item) => !!item);\r\n\t\tsetOptions(optionsArr);\r\n\t};\r\n\r\n\tconst saveForm = () => {\r\n\t\tconst formJson = {\r\n\t\t\ttitle: formTitle,\r\n\t\t\tbody: formBody,\r\n\t\t};\r\n\t\tdispatch(formActions.saveForm(formJson));\r\n\t};\r\n\r\n\tconst resetQuestionModal = () => {\r\n\t\tsetOptions([]);\r\n\t\tsetQuestionType(0);\r\n\t\tsetQuestion(\"\");\r\n\t};\r\n\r\n\tconst cancelNewQuestion = () => {\r\n\t\tresetQuestionModal();\r\n\t\tsetAddQuestionModalVisible(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (action === formActions.SAVE_FORM_SUCCESS) {\r\n\t\t\thistory.back();\r\n\t\t}\r\n\t}, [action]);\r\n\r\n\treturn (\r\n\t\t<div className=\"form-container\">\r\n\t\t\t<div className=\"form-header\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Form Title\"\r\n\t\t\t\t\tclassName=\"form-title\"\r\n\t\t\t\t\tvalue={formTitle}\r\n\t\t\t\t\tonChange={(e) => setFormTitle(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-body\">\r\n\t\t\t\t{formBody.map((que, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment key={index}>\r\n\t\t\t\t\t\t\t<p className=\"question\"> {`${que.id}. ${que.question}`} </p>\r\n\t\t\t\t\t\t\t{que.type == \"1\" && (\r\n\t\t\t\t\t\t\t\t<div key={que.id}>\r\n\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\tclassName={\"question-text-input question-text-input-\" + que.id}\r\n\t\t\t\t\t\t\t\t\t\tcols=\"60\"\r\n\t\t\t\t\t\t\t\t\t\trows=\"4\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your answer here\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={\"\"}\r\n\t\t\t\t\t\t\t\t\t\treadOnly={true}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{que.type == \"2\" && (\r\n\t\t\t\t\t\t\t\t<div key={que.id}>\r\n\t\t\t\t\t\t\t\t\t{que.options.map((opn, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={`option checkBox`} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={opn}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`optionInput answer-checkbox-${que.id}-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{opn}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{que.type == \"3\" && (\r\n\t\t\t\t\t\t\t\t<div key={que.id}>\r\n\t\t\t\t\t\t\t\t\t{que.options.map((opn, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={`option radio `} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={opn}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={`answer-radio-${que.id}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`optionInput answer-radio-${que.id}-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{opn}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-footer\">\r\n\t\t\t\t<button className=\"add-question-btn btn\" onClick={() => addQuestion()}>\r\n\t\t\t\t\tAdd Question\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"save-form-btn btn\" onClick={() => saveForm()}>\r\n\t\t\t\t\tSave\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Modal isOpen={addQuestionModalVisible}>\r\n\t\t\t\t<div className=\"new-question-container\">\r\n\t\t\t\t\t<div className=\"new-question-header\">\r\n\t\t\t\t\t\tEnter question:\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter your question\"\r\n\t\t\t\t\t\t\tclassName=\"new-question-input\"\r\n\t\t\t\t\t\t\tvalue={question}\r\n\t\t\t\t\t\t\tonChange={(e) => questionInputChange(e)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"new-question-body\">\r\n\t\t\t\t\t\t<div className=\"select-question-type-container\">\r\n\t\t\t\t\t\t\tSelect the answer type:\r\n\t\t\t\t\t\t\t<select className=\"select-question-type\" onChange={(e) => onQuestionTypeChange(e)} defaultValue={0}>\r\n\t\t\t\t\t\t\t\t<option value=\"0\" hidden>\r\n\t\t\t\t\t\t\t\t\t--Select--\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t<option value=\"1\"> Text </option>\r\n\t\t\t\t\t\t\t\t<option value=\"2\"> Checkbox </option>\r\n\t\t\t\t\t\t\t\t<option value=\"3\"> Radio </option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"answer-container\">\r\n\t\t\t\t\t\t\t{questionType > 1 && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\tEnter Options (line seperated):\r\n\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"options-input\"\r\n\t\t\t\t\t\t\t\t\t\tcols=\"60\"\r\n\t\t\t\t\t\t\t\t\t\trows=\"4\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your options here\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => optionInputChange(e)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"add-new-question-btn-container\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"add-new-question-btn btn\"\r\n\t\t\t\t\t\t\tonClick={() => addNewQuestion()}\r\n\t\t\t\t\t\t\tdisabled={questionType <= 0 || question == \"\" || (questionType > 1 && options.length <= 0)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className=\"cancel-new-question-btn btn\" onClick={() => cancelNewQuestion()}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CreateForm;\r\n\r\nconst itemEnum = {\r\n\t1: \"text\",\r\n\t2: \"checkBox\",\r\n\t3: \"radio\",\r\n};\r\n"]},"metadata":{},"sourceType":"module"}