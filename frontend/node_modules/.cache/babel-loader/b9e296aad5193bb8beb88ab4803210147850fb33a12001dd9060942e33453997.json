{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\bolo\\\\react-form-builder\\\\frontend\\\\src\\\\pages\\\\QuestionTypes\\\\CategorizeQuestion.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDrop, useDrag } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Answer = ({\n  answer,\n  index,\n  moveAnswer\n}) => {\n  _s();\n  const [, ref] = useDrag({\n    type: 'ANSWER',\n    item: {\n      index\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: {\n      padding: '8px',\n      border: '1px solid #ccc',\n      margin: '4px',\n      cursor: 'move'\n    },\n    children: answer.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_s(Answer, \"l83xjKI78HD1qqWPe6e86n/t6qI=\", false, function () {\n  return [useDrag];\n});\n_c = Answer;\nconst Category = ({\n  category,\n  answers,\n  setAnswers\n}) => {\n  _s2();\n  const [, drop] = useDrop({\n    accept: 'ANSWER',\n    drop: item => {\n      const updatedAnswers = [...answers];\n      updatedAnswers[item.index].category = category;\n      setAnswers(updatedAnswers);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: {\n      padding: '8px',\n      border: '2px solid #000',\n      margin: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), answers.filter(answer => answer.category === category).map((answer, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: answer.text\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s2(Category, \"hdmCamxlwL9WeSdzgzIVyaE48AI=\", false, function () {\n  return [useDrop];\n});\n_c2 = Category;\nconst CategorizeQuestion = ({\n  question,\n  onChange\n}) => {\n  _s3();\n  const [answers, setAnswers] = useState([]);\n  const handleAnswerChange = (index, text) => {\n    const updatedAnswers = [...answers];\n    updatedAnswers[index] = {\n      text,\n      category: ''\n    };\n    setAnswers(updatedAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Categorize:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter the categorization question\",\n      value: question.content,\n      onChange: e => onChange({\n        ...question,\n        content: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), answers.map((answer, index) => /*#__PURE__*/_jsxDEV(Answer, {\n          answer: answer,\n          index: index,\n          moveAnswer: handleAnswerChange\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), ['Category 1', 'Category 2', 'Category 3'].map((category, index) => /*#__PURE__*/_jsxDEV(Category, {\n          category: category,\n          answers: answers,\n          setAnswers: setAnswers\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s3(CategorizeQuestion, \"KPN3AqcgP4AdsR7kxBPisa81x6M=\");\n_c3 = CategorizeQuestion;\nexport default CategorizeQuestion;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Answer\");\n$RefreshReg$(_c2, \"Category\");\n$RefreshReg$(_c3, \"CategorizeQuestion\");","map":{"version":3,"names":["React","useState","useDrop","useDrag","jsxDEV","_jsxDEV","Answer","answer","index","moveAnswer","_s","ref","type","item","style","padding","border","margin","cursor","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","Category","category","answers","setAnswers","_s2","drop","accept","updatedAnswers","filter","map","_c2","CategorizeQuestion","question","onChange","_s3","handleAnswerChange","placeholder","value","content","e","target","display","marginTop","flex","_c3","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/bolo/react-form-builder/frontend/src/pages/QuestionTypes/CategorizeQuestion.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDrop, useDrag } from 'react-dnd';\r\n\r\nconst Answer = ({ answer, index, moveAnswer }) => {\r\n    const [, ref] = useDrag({\r\n        type: 'ANSWER',\r\n        item: { index },\r\n    });\r\n\r\n    return (\r\n        <div ref={ref} style={{ padding: '8px', border: '1px solid #ccc', margin: '4px', cursor: 'move' }}>\r\n            {answer.text}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Category = ({ category, answers, setAnswers }) => {\r\n    const [, drop] = useDrop({\r\n        accept: 'ANSWER',\r\n        drop: (item) => {\r\n            const updatedAnswers = [...answers];\r\n            updatedAnswers[item.index].category = category;\r\n            setAnswers(updatedAnswers);\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div ref={drop} style={{ padding: '8px', border: '2px solid #000', margin: '8px' }}>\r\n            <strong>{category}</strong>\r\n            {answers\r\n                .filter((answer) => answer.category === category)\r\n                .map((answer, index) => (\r\n                    <p key={index}>{answer.text}</p>\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CategorizeQuestion = ({ question, onChange }) => {\r\n    const [answers, setAnswers] = useState([]);\r\n\r\n    const handleAnswerChange = (index, text) => {\r\n        const updatedAnswers = [...answers];\r\n        updatedAnswers[index] = { text, category: '' };\r\n        setAnswers(updatedAnswers);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label>Categorize:</label>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter the categorization question\"\r\n                value={question.content}\r\n                onChange={(e) => onChange({ ...question, content: e.target.value })}\r\n            />\r\n            <div style={{ display: 'flex', marginTop: '10px' }}>\r\n                <div style={{ flex: 1 }}>\r\n                    <h4>Answers</h4>\r\n                    {answers.map((answer, index) => (\r\n                        <Answer key={index} answer={answer} index={index} moveAnswer={handleAnswerChange} />\r\n                    ))}\r\n                </div>\r\n                <div style={{ flex: 1 }}>\r\n                    <h4>Categories</h4>\r\n                    {['Category 1', 'Category 2', 'Category 3'].map((category, index) => (\r\n                        <Category key={index} category={category} answers={answers} setAnswers={setAnswers} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategorizeQuestion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}