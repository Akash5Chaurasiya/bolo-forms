{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\bolo\\\\react-form-builder\\\\frontend\\\\src\\\\pages\\\\QuestionTypes\\\\ClozeQuestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClozeQuestion = ({\n  question,\n  onChange\n}) => {\n  _s();\n  const [selectedText, setSelectedText] = useState('');\n  const contentEditableRef = useRef(null);\n  useEffect(() => {\n    const handleSelectionChange = () => {\n      const selection = window.getSelection();\n      setSelectedText(selection.toString());\n    };\n    const contentEditable = contentEditableRef.current;\n    contentEditable.addEventListener('select', handleSelectionChange);\n    return () => {\n      contentEditable.removeEventListener('select', handleSelectionChange);\n    };\n  }, []);\n  const handleContentChange = () => {\n    onChange({\n      ...question,\n      content: contentEditableRef.current.textContent\n    });\n  };\n  const handleInsertBlank = () => {\n    const contentEditable = contentEditableRef.current;\n    document.execCommand('insertHTML', false, '<span class=\"blank\">' + selectedText + '</span>');\n    handleContentChange();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Cloze (Fill in the Blank):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: contentEditableRef,\n      contentEditable: true,\n      placeholder: \"Enter the fill-in-the-blank question\",\n      onBlur: handleContentChange,\n      children: question.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInsertBlank,\n      children: \"Insert Blank\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ClozeQuestion, \"sDomtpyBM4XKB0Oko9vdDgkHiBU=\");\n_c = ClozeQuestion;\nexport default ClozeQuestion;\nvar _c;\n$RefreshReg$(_c, \"ClozeQuestion\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ClozeQuestion","question","onChange","_s","selectedText","setSelectedText","contentEditableRef","handleSelectionChange","selection","window","getSelection","toString","contentEditable","current","addEventListener","removeEventListener","handleContentChange","content","textContent","handleInsertBlank","document","execCommand","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","placeholder","onBlur","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/bolo/react-form-builder/frontend/src/pages/QuestionTypes/ClozeQuestion.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst ClozeQuestion = ({ question, onChange }) => {\r\n  const [selectedText, setSelectedText] = useState('');\r\n  const contentEditableRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleSelectionChange = () => {\r\n      const selection = window.getSelection();\r\n      setSelectedText(selection.toString());\r\n    };\r\n\r\n    const contentEditable = contentEditableRef.current;\r\n    contentEditable.addEventListener('select', handleSelectionChange);\r\n\r\n    return () => {\r\n      contentEditable.removeEventListener('select', handleSelectionChange);\r\n    };\r\n  }, []);\r\n\r\n  const handleContentChange = () => {\r\n    onChange({\r\n      ...question,\r\n      content: contentEditableRef.current.textContent,\r\n    });\r\n  };\r\n\r\n  const handleInsertBlank = () => {\r\n    const contentEditable = contentEditableRef.current;\r\n    document.execCommand('insertHTML', false, '<span class=\"blank\">' + selectedText + '</span>');\r\n    handleContentChange();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>Cloze (Fill in the Blank):</label>\r\n      <div\r\n        ref={contentEditableRef}\r\n        contentEditable\r\n        placeholder=\"Enter the fill-in-the-blank question\"\r\n        onBlur={handleContentChange}\r\n      >\r\n        {question.content}\r\n      </div>\r\n      <button onClick={handleInsertBlank}>Insert Blank</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClozeQuestion;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMW,kBAAkB,GAAGV,MAAM,CAAC,IAAI,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd,MAAMU,qBAAqB,GAAGA,CAAA,KAAM;MAClC,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC;MACvCL,eAAe,CAACG,SAAS,CAACG,QAAQ,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,MAAMC,eAAe,GAAGN,kBAAkB,CAACO,OAAO;IAClDD,eAAe,CAACE,gBAAgB,CAAC,QAAQ,EAAEP,qBAAqB,CAAC;IAEjE,OAAO,MAAM;MACXK,eAAe,CAACG,mBAAmB,CAAC,QAAQ,EAAER,qBAAqB,CAAC;IACtE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChCd,QAAQ,CAAC;MACP,GAAGD,QAAQ;MACXgB,OAAO,EAAEX,kBAAkB,CAACO,OAAO,CAACK;IACtC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMP,eAAe,GAAGN,kBAAkB,CAACO,OAAO;IAClDO,QAAQ,CAACC,WAAW,CAAC,YAAY,EAAE,KAAK,EAAE,sBAAsB,GAAGjB,YAAY,GAAG,SAAS,CAAC;IAC5FY,mBAAmB,CAAC,CAAC;EACvB,CAAC;EAED,oBACEjB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAO;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzC3B,OAAA;MACE4B,GAAG,EAAErB,kBAAmB;MACxBM,eAAe;MACfgB,WAAW,EAAC,sCAAsC;MAClDC,MAAM,EAAEb,mBAAoB;MAAAM,QAAA,EAE3BrB,QAAQ,CAACgB;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACN3B,OAAA;MAAQ+B,OAAO,EAAEX,iBAAkB;MAAAG,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACvB,EAAA,CA7CIH,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA+CnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}